{
	"id": "eb4d62724ead77690c518328cfe23ffc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/RomanToInteger.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n// 指定该合约的开源许可证为 GPL-3.0，用于表明代码的使用和分发规则\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n// 指定该合约编译所使用的 Solidity 版本范围，要求版本大于等于 0.7.0 且小于 0.9.0\r\n\r\n/**\r\n * @title RomanToInteger\r\n * @dev 实现将罗马数字转换为整数的功能。\r\n * 罗马数字包含以下七种字符: I， V， X， L，C，D 和 M，对应数值分别为 1, 5, 10, 50, 100, 500, 1000。\r\n * 通常小数字在大数字右边，但存在六种特例：\r\n * 1. I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。\r\n * 2. X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。\r\n * 3. C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。\r\n */\r\ncontract RomanToInteger {\r\n    /**\r\n     * @dev 将输入的罗马数字字符串转换为对应的整数。\r\n     * @param roman 要转换的罗马数字字符串。\r\n     * @return 转换后的整数。\r\n     */\r\n    function romanToInt(string memory roman) external pure returns (uint256) {\r\n        // 将输入的罗马数字字符串转换为 bytes 类型，方便按字符访问\r\n        bytes memory romanBytes = bytes(roman);\r\n        // 初始化最终结果为 0\r\n        uint256 result = 0;\r\n\r\n        // 遍历罗马数字字符串的每个字符\r\n        for (uint256 i = 0; i < romanBytes.length; i++) {\r\n            // 获取当前字符对应的数值\r\n            uint256 currentValue = charToValue(romanBytes[i]);\r\n            // 如果不是最后一个字符，获取下一个字符对应的数值\r\n            if (i + 1 < romanBytes.length) {\r\n                uint256 nextValue = charToValue(romanBytes[i + 1]);\r\n                // 若当前字符数值小于下一个字符数值，说明是特殊情况，需要用下一个数值减去当前数值\r\n                if (currentValue < nextValue) {\r\n                    result += nextValue - currentValue;\r\n                    // 由于已经处理了当前和下一个字符，跳过下一个字符\r\n                    i++;\r\n                } else {\r\n                    // 正常情况，直接累加当前字符对应的数值\r\n                    result += currentValue;\r\n                }\r\n            } else {\r\n                // 处理最后一个字符，直接累加其对应的数值\r\n                result += currentValue;\r\n            }\r\n        }\r\n\r\n        // 返回最终转换结果\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev 将单个罗马字符转换为对应的整数数值。\r\n     * @param char 要转换的单个罗马字符。\r\n     * @return 该字符对应的整数数值。\r\n     */\r\n    function charToValue(bytes1 char) internal pure returns (uint256) {\r\n        // 根据不同的罗马字符返回对应的数值\r\n        if (char == \"I\") return 1;\r\n        if (char == \"V\") return 5;\r\n        if (char == \"X\") return 10;\r\n        if (char == \"L\") return 50;\r\n        if (char == \"C\") return 100;\r\n        if (char == \"D\") return 500;\r\n        if (char == \"M\") return 1000;\r\n        // 若输入字符不是有效的罗马字符，返回 0\r\n        return 0;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/RomanToInteger.sol": {
				"RomanToInteger": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "roman",
									"type": "string"
								}
							],
							"name": "romanToInt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "实现将罗马数字转换为整数的功能。 罗马数字包含以下七种字符: I， V， X， L，C，D 和 M，对应数值分别为 1, 5, 10, 50, 100, 500, 1000。 通常小数字在大数字右边，但存在六种特例： 1. I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。 2. X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。 3. C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。",
						"kind": "dev",
						"methods": {
							"romanToInt(string)": {
								"details": "将输入的罗马数字字符串转换为对应的整数。",
								"params": {
									"roman": "要转换的罗马数字字符串。"
								},
								"returns": {
									"_0": "转换后的整数。"
								}
							}
						},
						"title": "RomanToInteger",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/RomanToInteger.sol\":793:3178  contract RomanToInteger {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/RomanToInteger.sol\":793:3178  contract RomanToInteger {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcb159dfe\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/RomanToInteger.sol\":1012:2496  function romanToInt(string memory roman) external pure returns (uint256) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/RomanToInteger.sol\":1076:1083  uint256 */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":1188:1211  bytes memory romanBytes */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":1220:1225  roman */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":1188:1226  bytes memory romanBytes = bytes(roman) */\n      swap1\n      pop\n        /* \"contracts/RomanToInteger.sol\":1276:1290  uint256 result */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":1293:1294  0 */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":1276:1294  uint256 result = 0 */\n      swap1\n      pop\n        /* \"contracts/RomanToInteger.sol\":1367:1376  uint256 i */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":1379:1380  0 */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":1367:1380  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/RomanToInteger.sol\":1362:2426  for (uint256 i = 0; i < romanBytes.length; i++) {... */\n    tag_11:\n        /* \"contracts/RomanToInteger.sol\":1386:1396  romanBytes */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":1386:1403  romanBytes.length */\n      mload\n        /* \"contracts/RomanToInteger.sol\":1382:1383  i */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":1382:1403  i < romanBytes.length */\n      lt\n        /* \"contracts/RomanToInteger.sol\":1362:2426  for (uint256 i = 0; i < romanBytes.length; i++) {... */\n      iszero\n      tag_12\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":1475:1495  uint256 currentValue */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":1498:1524  charToValue(romanBytes[i]) */\n      tag_14\n        /* \"contracts/RomanToInteger.sol\":1510:1520  romanBytes */\n      dup5\n        /* \"contracts/RomanToInteger.sol\":1521:1522  i */\n      dup4\n        /* \"contracts/RomanToInteger.sol\":1510:1523  romanBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_15\n      jumpi\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n    tag_15:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/RomanToInteger.sol\":1498:1509  charToValue */\n      tag_18\n        /* \"contracts/RomanToInteger.sol\":1498:1524  charToValue(romanBytes[i]) */\n      jump\t// in\n    tag_14:\n        /* \"contracts/RomanToInteger.sol\":1475:1524  uint256 currentValue = charToValue(romanBytes[i]) */\n      swap1\n      pop\n        /* \"contracts/RomanToInteger.sol\":1637:1647  romanBytes */\n      dup4\n        /* \"contracts/RomanToInteger.sol\":1637:1654  romanBytes.length */\n      mload\n        /* \"contracts/RomanToInteger.sol\":1633:1634  1 */\n      0x01\n        /* \"contracts/RomanToInteger.sol\":1629:1630  i */\n      dup4\n        /* \"contracts/RomanToInteger.sol\":1629:1634  i + 1 */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"contracts/RomanToInteger.sol\":1629:1654  i + 1 < romanBytes.length */\n      lt\n        /* \"contracts/RomanToInteger.sol\":1625:2415  if (i + 1 < romanBytes.length) {... */\n      iszero\n      tag_21\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":1675:1692  uint256 nextValue */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":1695:1725  charToValue(romanBytes[i + 1]) */\n      tag_22\n        /* \"contracts/RomanToInteger.sol\":1707:1717  romanBytes */\n      dup6\n        /* \"contracts/RomanToInteger.sol\":1722:1723  1 */\n      0x01\n        /* \"contracts/RomanToInteger.sol\":1718:1719  i */\n      dup6\n        /* \"contracts/RomanToInteger.sol\":1718:1723  i + 1 */\n      tag_23\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_23:\n        /* \"contracts/RomanToInteger.sol\":1707:1724  romanBytes[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_24\n      jumpi\n      tag_25\n      tag_17\n      jump\t// in\n    tag_25:\n    tag_24:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/RomanToInteger.sol\":1695:1706  charToValue */\n      tag_18\n        /* \"contracts/RomanToInteger.sol\":1695:1725  charToValue(romanBytes[i + 1]) */\n      jump\t// in\n    tag_22:\n        /* \"contracts/RomanToInteger.sol\":1675:1725  uint256 nextValue = charToValue(romanBytes[i + 1]) */\n      swap1\n      pop\n        /* \"contracts/RomanToInteger.sol\":1901:1910  nextValue */\n      dup1\n        /* \"contracts/RomanToInteger.sol\":1886:1898  currentValue */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":1886:1910  currentValue < nextValue */\n      lt\n        /* \"contracts/RomanToInteger.sol\":1882:2259  if (currentValue < nextValue) {... */\n      iszero\n      tag_26\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":1957:1969  currentValue */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":1945:1954  nextValue */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":1945:1969  nextValue - currentValue */\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"contracts/RomanToInteger.sol\":1935:1969  result += nextValue - currentValue */\n      dup5\n      tag_29\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_29:\n      swap4\n      pop\n        /* \"contracts/RomanToInteger.sol\":2086:2089  i++ */\n      dup3\n      dup1\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      swap4\n      pop\n      pop\n        /* \"contracts/RomanToInteger.sol\":1882:2259  if (currentValue < nextValue) {... */\n      jump(tag_32)\n    tag_26:\n        /* \"contracts/RomanToInteger.sol\":2227:2239  currentValue */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":2217:2239  result += currentValue */\n      dup5\n      tag_33\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_33:\n      swap4\n      pop\n        /* \"contracts/RomanToInteger.sol\":1882:2259  if (currentValue < nextValue) {... */\n    tag_32:\n        /* \"contracts/RomanToInteger.sol\":1656:2274  {... */\n      pop\n        /* \"contracts/RomanToInteger.sol\":1625:2415  if (i + 1 < romanBytes.length) {... */\n      jump(tag_34)\n    tag_21:\n        /* \"contracts/RomanToInteger.sol\":2387:2399  currentValue */\n      dup1\n        /* \"contracts/RomanToInteger.sol\":2377:2399  result += currentValue */\n      dup4\n      tag_35\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_35:\n      swap3\n      pop\n        /* \"contracts/RomanToInteger.sol\":1625:2415  if (i + 1 < romanBytes.length) {... */\n    tag_34:\n        /* \"contracts/RomanToInteger.sol\":1410:2426  {... */\n      pop\n        /* \"contracts/RomanToInteger.sol\":1405:1408  i++ */\n      dup1\n      dup1\n      tag_36\n      swap1\n      tag_31\n      jump\t// in\n    tag_36:\n      swap2\n      pop\n      pop\n        /* \"contracts/RomanToInteger.sol\":1362:2426  for (uint256 i = 0; i < romanBytes.length; i++) {... */\n      jump(tag_11)\n    tag_12:\n      pop\n        /* \"contracts/RomanToInteger.sol\":2482:2488  result */\n      dup1\n        /* \"contracts/RomanToInteger.sol\":2475:2488  return result */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/RomanToInteger.sol\":1012:2496  function romanToInt(string memory roman) external pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/RomanToInteger.sol\":2694:3175  function charToValue(bytes1 char) internal pure returns (uint256) {... */\n    tag_18:\n        /* \"contracts/RomanToInteger.sol\":2751:2758  uint256 */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":2836:2847  char == \"I\" */\n      0x4900000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":2836:2840  char */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":2836:2847  char == \"I\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":2832:2857  if (char == \"I\") return 1 */\n      tag_38\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":2856:2857  1 */\n      0x01\n        /* \"contracts/RomanToInteger.sol\":2849:2857  return 1 */\n      swap1\n      pop\n      jump(tag_37)\n        /* \"contracts/RomanToInteger.sol\":2832:2857  if (char == \"I\") return 1 */\n    tag_38:\n        /* \"contracts/RomanToInteger.sol\":2872:2883  char == \"V\" */\n      0x5600000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":2872:2876  char */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":2872:2883  char == \"V\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":2868:2893  if (char == \"V\") return 5 */\n      tag_39\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":2892:2893  5 */\n      0x05\n        /* \"contracts/RomanToInteger.sol\":2885:2893  return 5 */\n      swap1\n      pop\n      jump(tag_37)\n        /* \"contracts/RomanToInteger.sol\":2868:2893  if (char == \"V\") return 5 */\n    tag_39:\n        /* \"contracts/RomanToInteger.sol\":2908:2919  char == \"X\" */\n      0x5800000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":2908:2912  char */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":2908:2919  char == \"X\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":2904:2930  if (char == \"X\") return 10 */\n      tag_40\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":2928:2930  10 */\n      0x0a\n        /* \"contracts/RomanToInteger.sol\":2921:2930  return 10 */\n      swap1\n      pop\n      jump(tag_37)\n        /* \"contracts/RomanToInteger.sol\":2904:2930  if (char == \"X\") return 10 */\n    tag_40:\n        /* \"contracts/RomanToInteger.sol\":2945:2956  char == \"L\" */\n      0x4c00000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":2945:2949  char */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":2945:2956  char == \"L\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":2941:2967  if (char == \"L\") return 50 */\n      tag_41\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":2965:2967  50 */\n      0x32\n        /* \"contracts/RomanToInteger.sol\":2958:2967  return 50 */\n      swap1\n      pop\n      jump(tag_37)\n        /* \"contracts/RomanToInteger.sol\":2941:2967  if (char == \"L\") return 50 */\n    tag_41:\n        /* \"contracts/RomanToInteger.sol\":2982:2993  char == \"C\" */\n      0x4300000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":2982:2986  char */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":2982:2993  char == \"C\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":2978:3005  if (char == \"C\") return 100 */\n      tag_42\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":3002:3005  100 */\n      0x64\n        /* \"contracts/RomanToInteger.sol\":2995:3005  return 100 */\n      swap1\n      pop\n      jump(tag_37)\n        /* \"contracts/RomanToInteger.sol\":2978:3005  if (char == \"C\") return 100 */\n    tag_42:\n        /* \"contracts/RomanToInteger.sol\":3020:3031  char == \"D\" */\n      0x4400000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":3020:3024  char */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":3020:3031  char == \"D\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":3016:3043  if (char == \"D\") return 500 */\n      tag_43\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":3040:3043  500 */\n      0x01f4\n        /* \"contracts/RomanToInteger.sol\":3033:3043  return 500 */\n      swap1\n      pop\n      jump(tag_37)\n        /* \"contracts/RomanToInteger.sol\":3016:3043  if (char == \"D\") return 500 */\n    tag_43:\n        /* \"contracts/RomanToInteger.sol\":3058:3069  char == \"M\" */\n      0x4d00000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":3058:3062  char */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":3058:3069  char == \"M\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":3054:3082  if (char == \"M\") return 1000 */\n      tag_44\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":3078:3082  1000 */\n      0x03e8\n        /* \"contracts/RomanToInteger.sol\":3071:3082  return 1000 */\n      swap1\n      pop\n      jump(tag_37)\n        /* \"contracts/RomanToInteger.sol\":3054:3082  if (char == \"M\") return 1000 */\n    tag_44:\n        /* \"contracts/RomanToInteger.sol\":3166:3167  0 */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":3159:3167  return 0 */\n      swap1\n      pop\n        /* \"contracts/RomanToInteger.sol\":2694:3175  function charToValue(bytes1 char) internal pure returns (uint256) {... */\n    tag_37:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_45:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_46:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_47:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_48:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      0x00\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_49:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      0x00\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_50:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_51:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_52:\n        /* \"#utility.yul\":957:984   */\n      tag_70\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_50\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_72\n      tag_51\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1030:1118   */\n    tag_71:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_53:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_74\n      tag_45\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_75\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_52\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1604   */\n    tag_54:\n        /* \"#utility.yul\":1358:1362   */\n      0x00\n        /* \"#utility.yul\":1448:1466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1440:1446   */\n      dup3\n        /* \"#utility.yul\":1437:1467   */\n      gt\n        /* \"#utility.yul\":1434:1490   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":1470:1488   */\n      tag_78\n      tag_51\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1434:1490   */\n    tag_77:\n        /* \"#utility.yul\":1508:1537   */\n      tag_79\n        /* \"#utility.yul\":1530:1536   */\n      dup3\n        /* \"#utility.yul\":1508:1537   */\n      tag_50\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1500:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1586:1590   */\n      dup2\n        /* \"#utility.yul\":1582:1597   */\n      add\n        /* \"#utility.yul\":1574:1597   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1758   */\n    tag_55:\n        /* \"#utility.yul\":1708:1714   */\n      dup3\n        /* \"#utility.yul\":1703:1706   */\n      dup2\n        /* \"#utility.yul\":1698:1701   */\n      dup4\n        /* \"#utility.yul\":1685:1715   */\n      calldatacopy\n        /* \"#utility.yul\":1749:1750   */\n      0x00\n        /* \"#utility.yul\":1740:1746   */\n      dup4\n        /* \"#utility.yul\":1735:1738   */\n      dup4\n        /* \"#utility.yul\":1731:1747   */\n      add\n        /* \"#utility.yul\":1724:1751   */\n      mstore\n        /* \"#utility.yul\":1610:1758   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1764:2189   */\n    tag_56:\n        /* \"#utility.yul\":1842:1847   */\n      0x00\n        /* \"#utility.yul\":1867:1933   */\n      tag_82\n        /* \"#utility.yul\":1883:1932   */\n      tag_83\n        /* \"#utility.yul\":1925:1931   */\n      dup5\n        /* \"#utility.yul\":1883:1932   */\n      tag_54\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1867:1933   */\n      tag_53\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1858:1933   */\n      swap1\n      pop\n        /* \"#utility.yul\":1956:1962   */\n      dup3\n        /* \"#utility.yul\":1949:1954   */\n      dup2\n        /* \"#utility.yul\":1942:1963   */\n      mstore\n        /* \"#utility.yul\":1994:1998   */\n      0x20\n        /* \"#utility.yul\":1987:1992   */\n      dup2\n        /* \"#utility.yul\":1983:1999   */\n      add\n        /* \"#utility.yul\":2032:2035   */\n      dup5\n        /* \"#utility.yul\":2023:2029   */\n      dup5\n        /* \"#utility.yul\":2018:2021   */\n      dup5\n        /* \"#utility.yul\":2014:2030   */\n      add\n        /* \"#utility.yul\":2011:2036   */\n      gt\n        /* \"#utility.yul\":2008:2120   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2039:2118   */\n      tag_85\n      tag_49\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2008:2120   */\n    tag_84:\n        /* \"#utility.yul\":2129:2183   */\n      tag_86\n        /* \"#utility.yul\":2176:2182   */\n      dup5\n        /* \"#utility.yul\":2171:2174   */\n      dup3\n        /* \"#utility.yul\":2166:2169   */\n      dup6\n        /* \"#utility.yul\":2129:2183   */\n      tag_55\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1848:2189   */\n      pop\n        /* \"#utility.yul\":1764:2189   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2549   */\n    tag_57:\n        /* \"#utility.yul\":2265:2270   */\n      0x00\n        /* \"#utility.yul\":2314:2317   */\n      dup3\n        /* \"#utility.yul\":2307:2311   */\n      0x1f\n        /* \"#utility.yul\":2299:2305   */\n      dup4\n        /* \"#utility.yul\":2295:2312   */\n      add\n        /* \"#utility.yul\":2291:2318   */\n      slt\n        /* \"#utility.yul\":2281:2403   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":2322:2401   */\n      tag_89\n      tag_48\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2281:2403   */\n    tag_88:\n        /* \"#utility.yul\":2439:2445   */\n      dup2\n        /* \"#utility.yul\":2426:2446   */\n      calldataload\n        /* \"#utility.yul\":2464:2543   */\n      tag_90\n        /* \"#utility.yul\":2539:2542   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2524:2528   */\n      0x20\n        /* \"#utility.yul\":2516:2522   */\n      dup7\n        /* \"#utility.yul\":2512:2529   */\n      add\n        /* \"#utility.yul\":2464:2543   */\n      tag_56\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2455:2543   */\n      swap2\n      pop\n        /* \"#utility.yul\":2271:2549   */\n      pop\n        /* \"#utility.yul\":2209:2549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2555:3064   */\n    tag_6:\n        /* \"#utility.yul\":2624:2630   */\n      0x00\n        /* \"#utility.yul\":2673:2675   */\n      0x20\n        /* \"#utility.yul\":2661:2670   */\n      dup3\n        /* \"#utility.yul\":2652:2659   */\n      dup5\n        /* \"#utility.yul\":2648:2671   */\n      sub\n        /* \"#utility.yul\":2644:2676   */\n      slt\n        /* \"#utility.yul\":2641:2760   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":2679:2758   */\n      tag_93\n      tag_46\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2641:2760   */\n    tag_92:\n        /* \"#utility.yul\":2827:2828   */\n      0x00\n        /* \"#utility.yul\":2816:2825   */\n      dup3\n        /* \"#utility.yul\":2812:2829   */\n      add\n        /* \"#utility.yul\":2799:2830   */\n      calldataload\n        /* \"#utility.yul\":2857:2875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2849:2855   */\n      dup2\n        /* \"#utility.yul\":2846:2876   */\n      gt\n        /* \"#utility.yul\":2843:2960   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":2879:2958   */\n      tag_95\n      tag_47\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2843:2960   */\n    tag_94:\n        /* \"#utility.yul\":2984:3047   */\n      tag_96\n        /* \"#utility.yul\":3039:3046   */\n      dup5\n        /* \"#utility.yul\":3030:3036   */\n      dup3\n        /* \"#utility.yul\":3019:3028   */\n      dup6\n        /* \"#utility.yul\":3015:3037   */\n      add\n        /* \"#utility.yul\":2984:3047   */\n      tag_57\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2974:3047   */\n      swap2\n      pop\n        /* \"#utility.yul\":2770:3057   */\n      pop\n        /* \"#utility.yul\":2555:3064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3070:3147   */\n    tag_58:\n        /* \"#utility.yul\":3107:3114   */\n      0x00\n        /* \"#utility.yul\":3136:3141   */\n      dup2\n        /* \"#utility.yul\":3125:3141   */\n      swap1\n      pop\n        /* \"#utility.yul\":3070:3147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3153:3271   */\n    tag_59:\n        /* \"#utility.yul\":3240:3264   */\n      tag_99\n        /* \"#utility.yul\":3258:3263   */\n      dup2\n        /* \"#utility.yul\":3240:3264   */\n      tag_58\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3235:3238   */\n      dup3\n        /* \"#utility.yul\":3228:3265   */\n      mstore\n        /* \"#utility.yul\":3153:3271   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3499   */\n    tag_9:\n        /* \"#utility.yul\":3370:3374   */\n      0x00\n        /* \"#utility.yul\":3408:3410   */\n      0x20\n        /* \"#utility.yul\":3397:3406   */\n      dup3\n        /* \"#utility.yul\":3393:3411   */\n      add\n        /* \"#utility.yul\":3385:3411   */\n      swap1\n      pop\n        /* \"#utility.yul\":3421:3492   */\n      tag_101\n        /* \"#utility.yul\":3489:3490   */\n      0x00\n        /* \"#utility.yul\":3478:3487   */\n      dup4\n        /* \"#utility.yul\":3474:3491   */\n      add\n        /* \"#utility.yul\":3465:3471   */\n      dup5\n        /* \"#utility.yul\":3421:3492   */\n      tag_59\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3277:3499   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3505:3685   */\n    tag_17:\n        /* \"#utility.yul\":3553:3630   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3550:3551   */\n      0x00\n        /* \"#utility.yul\":3543:3631   */\n      mstore\n        /* \"#utility.yul\":3650:3654   */\n      0x32\n        /* \"#utility.yul\":3647:3648   */\n      0x04\n        /* \"#utility.yul\":3640:3655   */\n      mstore\n        /* \"#utility.yul\":3674:3678   */\n      0x24\n        /* \"#utility.yul\":3671:3672   */\n      0x00\n        /* \"#utility.yul\":3664:3679   */\n      revert\n        /* \"#utility.yul\":3691:3871   */\n    tag_60:\n        /* \"#utility.yul\":3739:3816   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3736:3737   */\n      0x00\n        /* \"#utility.yul\":3729:3817   */\n      mstore\n        /* \"#utility.yul\":3836:3840   */\n      0x11\n        /* \"#utility.yul\":3833:3834   */\n      0x04\n        /* \"#utility.yul\":3826:3841   */\n      mstore\n        /* \"#utility.yul\":3860:3864   */\n      0x24\n        /* \"#utility.yul\":3857:3858   */\n      0x00\n        /* \"#utility.yul\":3850:3865   */\n      revert\n        /* \"#utility.yul\":3877:4068   */\n    tag_20:\n        /* \"#utility.yul\":3917:3920   */\n      0x00\n        /* \"#utility.yul\":3936:3956   */\n      tag_105\n        /* \"#utility.yul\":3954:3955   */\n      dup3\n        /* \"#utility.yul\":3936:3956   */\n      tag_58\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3931:3956   */\n      swap2\n      pop\n        /* \"#utility.yul\":3970:3990   */\n      tag_106\n        /* \"#utility.yul\":3988:3989   */\n      dup4\n        /* \"#utility.yul\":3970:3990   */\n      tag_58\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3965:3990   */\n      swap3\n      pop\n        /* \"#utility.yul\":4013:4014   */\n      dup3\n        /* \"#utility.yul\":4010:4011   */\n      dup3\n        /* \"#utility.yul\":4006:4015   */\n      add\n        /* \"#utility.yul\":3999:4015   */\n      swap1\n      pop\n        /* \"#utility.yul\":4034:4037   */\n      dup1\n        /* \"#utility.yul\":4031:4032   */\n      dup3\n        /* \"#utility.yul\":4028:4038   */\n      gt\n        /* \"#utility.yul\":4025:4061   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":4041:4059   */\n      tag_108\n      tag_60\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":4025:4061   */\n    tag_107:\n        /* \"#utility.yul\":3877:4068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4074:4268   */\n    tag_28:\n        /* \"#utility.yul\":4114:4118   */\n      0x00\n        /* \"#utility.yul\":4134:4154   */\n      tag_110\n        /* \"#utility.yul\":4152:4153   */\n      dup3\n        /* \"#utility.yul\":4134:4154   */\n      tag_58\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":4129:4154   */\n      swap2\n      pop\n        /* \"#utility.yul\":4168:4188   */\n      tag_111\n        /* \"#utility.yul\":4186:4187   */\n      dup4\n        /* \"#utility.yul\":4168:4188   */\n      tag_58\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4163:4188   */\n      swap3\n      pop\n        /* \"#utility.yul\":4212:4213   */\n      dup3\n        /* \"#utility.yul\":4209:4210   */\n      dup3\n        /* \"#utility.yul\":4205:4214   */\n      sub\n        /* \"#utility.yul\":4197:4214   */\n      swap1\n      pop\n        /* \"#utility.yul\":4236:4237   */\n      dup2\n        /* \"#utility.yul\":4230:4234   */\n      dup2\n        /* \"#utility.yul\":4227:4238   */\n      gt\n        /* \"#utility.yul\":4224:4261   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":4241:4259   */\n      tag_113\n      tag_60\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":4224:4261   */\n    tag_112:\n        /* \"#utility.yul\":4074:4268   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4274:4507   */\n    tag_31:\n        /* \"#utility.yul\":4313:4316   */\n      0x00\n        /* \"#utility.yul\":4336:4360   */\n      tag_115\n        /* \"#utility.yul\":4354:4359   */\n      dup3\n        /* \"#utility.yul\":4336:4360   */\n      tag_58\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4327:4360   */\n      swap2\n      pop\n        /* \"#utility.yul\":4382:4448   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4375:4380   */\n      dup3\n        /* \"#utility.yul\":4372:4449   */\n      sub\n        /* \"#utility.yul\":4369:4472   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":4452:4470   */\n      tag_117\n      tag_60\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4369:4472   */\n    tag_116:\n        /* \"#utility.yul\":4499:4500   */\n      0x01\n        /* \"#utility.yul\":4492:4497   */\n      dup3\n        /* \"#utility.yul\":4488:4501   */\n      add\n        /* \"#utility.yul\":4481:4501   */\n      swap1\n      pop\n        /* \"#utility.yul\":4274:4507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208188a89a9f02234b251eee3e3cb5184adac8448a9d3acd79d224051444e430e264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506106aa8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063cb159dfe1461002d575b5f5ffd5b610047600480360381019061004291906104f5565b61005d565b6040516100549190610554565b60405180910390f35b5f5f8290505f5f90505f5f90505b8251811015610153575f61009b84838151811061008b5761008a61056d565b5b602001015160f81c60f81b61015e565b905083516001836100ac91906105c7565b1015610130575f6100e5856001856100c491906105c7565b815181106100d5576100d461056d565b5b602001015160f81c60f81b61015e565b90508082101561011b5781816100fb91906105fa565b8461010691906105c7565b935082806101139061062d565b93505061012a565b818461012791906105c7565b93505b5061013f565b808361013c91906105c7565b92505b50808061014b9061062d565b91505061006b565b508092505050919050565b5f7f4900000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036101b157600190506103a3565b7f5600000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361020357600590506103a3565b7f5800000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361025557600a90506103a3565b7f4c00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036102a757603290506103a3565b7f4300000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036102f957606490506103a3565b7f4400000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361034c576101f490506103a3565b7f4d00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361039f576103e890506103a3565b5f90505b919050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610407826103c1565b810181811067ffffffffffffffff82111715610426576104256103d1565b5b80604052505050565b5f6104386103a8565b905061044482826103fe565b919050565b5f67ffffffffffffffff821115610463576104626103d1565b5b61046c826103c1565b9050602081019050919050565b828183375f83830152505050565b5f61049961049484610449565b61042f565b9050828152602081018484840111156104b5576104b46103bd565b5b6104c0848285610479565b509392505050565b5f82601f8301126104dc576104db6103b9565b5b81356104ec848260208601610487565b91505092915050565b5f6020828403121561050a576105096103b1565b5b5f82013567ffffffffffffffff811115610527576105266103b5565b5b610533848285016104c8565b91505092915050565b5f819050919050565b61054e8161053c565b82525050565b5f6020820190506105675f830184610545565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6105d18261053c565b91506105dc8361053c565b92508282019050808211156105f4576105f361059a565b5b92915050565b5f6106048261053c565b915061060f8361053c565b92508282039050818111156106275761062661059a565b5b92915050565b5f6106378261053c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106695761066861059a565b5b60018201905091905056fea26469706673582212208188a89a9f02234b251eee3e3cb5184adac8448a9d3acd79d224051444e430e264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6AA DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB159DFE EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 DUP3 SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x153 JUMPI PUSH0 PUSH2 0x9B DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8B JUMPI PUSH2 0x8A PUSH2 0x56D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x15E JUMP JUMPDEST SWAP1 POP DUP4 MLOAD PUSH1 0x1 DUP4 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST LT ISZERO PUSH2 0x130 JUMPI PUSH0 PUSH2 0xE5 DUP6 PUSH1 0x1 DUP6 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xD5 JUMPI PUSH2 0xD4 PUSH2 0x56D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x15E JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x11B JUMPI DUP2 DUP2 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x5FA JUMP JUMPDEST DUP5 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST SWAP4 POP DUP3 DUP1 PUSH2 0x113 SWAP1 PUSH2 0x62D JUMP JUMPDEST SWAP4 POP POP PUSH2 0x12A JUMP JUMPDEST DUP2 DUP5 PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x13F JUMP JUMPDEST DUP1 DUP4 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 POP JUMPDEST POP DUP1 DUP1 PUSH2 0x14B SWAP1 PUSH2 0x62D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6B JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x4900000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x1B1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0x5600000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x203 JUMPI PUSH1 0x5 SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x255 JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0x4C00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x2A7 JUMPI PUSH1 0x32 SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x2F9 JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x34C JUMPI PUSH2 0x1F4 SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0x4D00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x39F JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x407 DUP3 PUSH2 0x3C1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x426 JUMPI PUSH2 0x425 PUSH2 0x3D1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x438 PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP PUSH2 0x444 DUP3 DUP3 PUSH2 0x3FE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x463 JUMPI PUSH2 0x462 PUSH2 0x3D1 JUMP JUMPDEST JUMPDEST PUSH2 0x46C DUP3 PUSH2 0x3C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x499 PUSH2 0x494 DUP5 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4B5 JUMPI PUSH2 0x4B4 PUSH2 0x3BD JUMP JUMPDEST JUMPDEST PUSH2 0x4C0 DUP5 DUP3 DUP6 PUSH2 0x479 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4DC JUMPI PUSH2 0x4DB PUSH2 0x3B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4EC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x487 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x50A JUMPI PUSH2 0x509 PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x527 JUMPI PUSH2 0x526 PUSH2 0x3B5 JUMP JUMPDEST JUMPDEST PUSH2 0x533 DUP5 DUP3 DUP6 ADD PUSH2 0x4C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54E DUP2 PUSH2 0x53C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x567 PUSH0 DUP4 ADD DUP5 PUSH2 0x545 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x5D1 DUP3 PUSH2 0x53C JUMP JUMPDEST SWAP2 POP PUSH2 0x5DC DUP4 PUSH2 0x53C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x5F4 JUMPI PUSH2 0x5F3 PUSH2 0x59A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x604 DUP3 PUSH2 0x53C JUMP JUMPDEST SWAP2 POP PUSH2 0x60F DUP4 PUSH2 0x53C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x627 JUMPI PUSH2 0x626 PUSH2 0x59A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x637 DUP3 PUSH2 0x53C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x669 JUMPI PUSH2 0x668 PUSH2 0x59A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 DUP9 0xA8 SWAP11 SWAP16 MUL 0x23 0x4B 0x25 0x1E RETURNCONTRACT 0x3E EXTCODECOPY 0xB5 XOR BLOBBASEFEE 0xDA 0xC8 PREVRANDAO DUP11 SWAP14 GASPRICE 0xCD PUSH26 0xD224051444E430E264736F6C634300081E003300000000000000 ",
							"sourceMap": "793:2385:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@charToValue_140": {
									"entryPoint": 350,
									"id": 140,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@romanToInt_87": {
									"entryPoint": 93,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 1224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 1269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1389,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 953,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4510:1",
										"nodeType": "YulBlock",
										"src": "0:4510:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "423:28:1",
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:1",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:12:1",
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nativeSrc": "433:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nativeSrc": "546:28:1",
													"nodeType": "YulBlock",
													"src": "546:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:1",
																		"nodeType": "YulLiteral",
																		"src": "563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:1",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nativeSrc": "556:12:1",
																"nodeType": "YulFunctionCall",
																"src": "556:12:1"
															},
															"nativeSrc": "556:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:1"
											},
											{
												"body": {
													"nativeSrc": "628:54:1",
													"nodeType": "YulBlock",
													"src": "628:54:1",
													"statements": [
														{
															"nativeSrc": "638:38:1",
															"nodeType": "YulAssignment",
															"src": "638:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:1",
																				"nodeType": "YulLiteral",
																				"src": "663:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nativeSrc": "652:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:1",
																				"nodeType": "YulLiteral",
																				"src": "672:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:1"
																		},
																		"nativeSrc": "668:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:1"
																},
																"nativeSrc": "648:28:1",
																"nodeType": "YulFunctionCall",
																"src": "648:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:1",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:1",
														"nodeType": "YulTypedName",
														"src": "621:6:1",
														"type": ""
													}
												],
												"src": "580:102:1"
											},
											{
												"body": {
													"nativeSrc": "716:152:1",
													"nodeType": "YulBlock",
													"src": "716:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:1",
																		"nodeType": "YulLiteral",
																		"src": "733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:1",
																		"nodeType": "YulLiteral",
																		"src": "736:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:1"
																},
																"nativeSrc": "726:88:1",
																"nodeType": "YulFunctionCall",
																"src": "726:88:1"
															},
															"nativeSrc": "726:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:1",
																		"nodeType": "YulLiteral",
																		"src": "830:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:1",
																		"nodeType": "YulLiteral",
																		"src": "833:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																},
																"nativeSrc": "823:15:1",
																"nodeType": "YulFunctionCall",
																"src": "823:15:1"
															},
															"nativeSrc": "823:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:1",
																		"nodeType": "YulLiteral",
																		"src": "854:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:1",
																		"nodeType": "YulLiteral",
																		"src": "857:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																},
																"nativeSrc": "847:15:1",
																"nodeType": "YulFunctionCall",
																"src": "847:15:1"
															},
															"nativeSrc": "847:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:1"
											},
											{
												"body": {
													"nativeSrc": "917:238:1",
													"nodeType": "YulBlock",
													"src": "917:238:1",
													"statements": [
														{
															"nativeSrc": "927:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:1"
																		},
																		"nativeSrc": "957:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:1"
																},
																"nativeSrc": "945:40:1",
																"nodeType": "YulFunctionCall",
																"src": "945:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:1",
																	"nodeType": "YulTypedName",
																	"src": "931:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:1",
																"nodeType": "YulBlock",
																"src": "1096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:1"
																			},
																			"nativeSrc": "1098:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:1"
																		},
																		"nativeSrc": "1098:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:1",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:1"
																		},
																		"nativeSrc": "1036:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:1"
																		},
																		"nativeSrc": "1072:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:1"
																},
																"nativeSrc": "1033:62:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:1"
															},
															"nativeSrc": "1030:88:1",
															"nodeType": "YulIf",
															"src": "1030:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nativeSrc": "1127:22:1",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:1"
															},
															"nativeSrc": "1127:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:1",
														"nodeType": "YulTypedName",
														"src": "903:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:1",
														"nodeType": "YulTypedName",
														"src": "911:4:1",
														"type": ""
													}
												],
												"src": "874:281:1"
											},
											{
												"body": {
													"nativeSrc": "1202:88:1",
													"nodeType": "YulBlock",
													"src": "1202:88:1",
													"statements": [
														{
															"nativeSrc": "1212:30:1",
															"nodeType": "YulAssignment",
															"src": "1212:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:1"
																},
																"nativeSrc": "1222:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:1"
																},
																"nativeSrc": "1251:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:1"
															},
															"nativeSrc": "1251:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:1",
														"nodeType": "YulTypedName",
														"src": "1186:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:1",
														"nodeType": "YulTypedName",
														"src": "1195:6:1",
														"type": ""
													}
												],
												"src": "1161:129:1"
											},
											{
												"body": {
													"nativeSrc": "1363:241:1",
													"nodeType": "YulBlock",
													"src": "1363:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:1",
																"nodeType": "YulBlock",
																"src": "1468:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:1"
																			},
																			"nativeSrc": "1470:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:1"
																		},
																		"nativeSrc": "1470:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:1",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:1"
																},
																"nativeSrc": "1437:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:1"
															},
															"nativeSrc": "1434:56:1",
															"nodeType": "YulIf",
															"src": "1434:56:1"
														},
														{
															"nativeSrc": "1500:37:1",
															"nodeType": "YulAssignment",
															"src": "1500:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:1"
																},
																"nativeSrc": "1508:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:1"
																}
															]
														},
														{
															"nativeSrc": "1574:23:1",
															"nodeType": "YulAssignment",
															"src": "1574:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:1"
																},
																"nativeSrc": "1582:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:1",
														"nodeType": "YulTypedName",
														"src": "1347:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:1",
														"nodeType": "YulTypedName",
														"src": "1358:4:1",
														"type": ""
													}
												],
												"src": "1296:308:1"
											},
											{
												"body": {
													"nativeSrc": "1674:84:1",
													"nodeType": "YulBlock",
													"src": "1674:84:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1698:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1698:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1703:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1703:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1708:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1685:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1685:12:1"
																},
																"nativeSrc": "1685:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1685:30:1"
															},
															"nativeSrc": "1685:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "1685:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1735:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1735:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1740:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1740:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:1"
																		},
																		"nativeSrc": "1731:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1731:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1749:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1724:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:1"
																},
																"nativeSrc": "1724:27:1",
																"nodeType": "YulFunctionCall",
																"src": "1724:27:1"
															},
															"nativeSrc": "1724:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "1724:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "1610:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1656:3:1",
														"nodeType": "YulTypedName",
														"src": "1656:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1661:3:1",
														"nodeType": "YulTypedName",
														"src": "1661:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1666:6:1",
														"nodeType": "YulTypedName",
														"src": "1666:6:1",
														"type": ""
													}
												],
												"src": "1610:148:1"
											},
											{
												"body": {
													"nativeSrc": "1848:341:1",
													"nodeType": "YulBlock",
													"src": "1848:341:1",
													"statements": [
														{
															"nativeSrc": "1858:75:1",
															"nodeType": "YulAssignment",
															"src": "1858:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1925:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1925:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1883:41:1",
																			"nodeType": "YulIdentifier",
																			"src": "1883:41:1"
																		},
																		"nativeSrc": "1883:49:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1867:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "1867:15:1"
																},
																"nativeSrc": "1867:66:1",
																"nodeType": "YulFunctionCall",
																"src": "1867:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1858:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1858:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1949:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1949:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1956:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1956:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1942:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:1"
																},
																"nativeSrc": "1942:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1942:21:1"
															},
															"nativeSrc": "1942:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1942:21:1"
														},
														{
															"nativeSrc": "1972:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1972:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1987:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1987:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1994:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1983:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nativeSrc": "1983:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1983:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1976:3:1",
																	"nodeType": "YulTypedName",
																	"src": "1976:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2037:83:1",
																"nodeType": "YulBlock",
																"src": "2037:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2039:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2039:77:1"
																			},
																			"nativeSrc": "2039:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2039:79:1"
																		},
																		"nativeSrc": "2039:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2039:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2018:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2018:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2023:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2014:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2014:3:1"
																		},
																		"nativeSrc": "2014:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2014:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2032:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2032:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2011:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2011:2:1"
																},
																"nativeSrc": "2011:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2011:25:1"
															},
															"nativeSrc": "2008:112:1",
															"nodeType": "YulIf",
															"src": "2008:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2129:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "2129:36:1"
																},
																"nativeSrc": "2129:54:1",
																"nodeType": "YulFunctionCall",
																"src": "2129:54:1"
															},
															"nativeSrc": "2129:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "2129:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "1764:425:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1821:3:1",
														"nodeType": "YulTypedName",
														"src": "1821:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1826:6:1",
														"nodeType": "YulTypedName",
														"src": "1826:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1834:3:1",
														"nodeType": "YulTypedName",
														"src": "1834:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1842:5:1",
														"nodeType": "YulTypedName",
														"src": "1842:5:1",
														"type": ""
													}
												],
												"src": "1764:425:1"
											},
											{
												"body": {
													"nativeSrc": "2271:278:1",
													"nodeType": "YulBlock",
													"src": "2271:278:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2320:83:1",
																"nodeType": "YulBlock",
																"src": "2320:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2322:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2322:77:1"
																			},
																			"nativeSrc": "2322:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2322:79:1"
																		},
																		"nativeSrc": "2322:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2299:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2299:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2307:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2307:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2295:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2295:3:1"
																				},
																				"nativeSrc": "2295:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2295:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2314:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2291:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2291:3:1"
																		},
																		"nativeSrc": "2291:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2291:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2284:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:1"
																},
																"nativeSrc": "2284:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2284:35:1"
															},
															"nativeSrc": "2281:122:1",
															"nodeType": "YulIf",
															"src": "2281:122:1"
														},
														{
															"nativeSrc": "2412:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2412:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2439:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2439:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2426:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2426:12:1"
																},
																"nativeSrc": "2426:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2426:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2416:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2416:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2455:88:1",
															"nodeType": "YulAssignment",
															"src": "2455:88:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2516:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2516:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2524:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2512:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2512:3:1"
																		},
																		"nativeSrc": "2512:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2512:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2531:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2539:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2539:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "2464:47:1",
																	"nodeType": "YulIdentifier",
																	"src": "2464:47:1"
																},
																"nativeSrc": "2464:79:1",
																"nodeType": "YulFunctionCall",
																"src": "2464:79:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2455:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2455:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "2209:340:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2249:6:1",
														"nodeType": "YulTypedName",
														"src": "2249:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2257:3:1",
														"nodeType": "YulTypedName",
														"src": "2257:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2265:5:1",
														"nodeType": "YulTypedName",
														"src": "2265:5:1",
														"type": ""
													}
												],
												"src": "2209:340:1"
											},
											{
												"body": {
													"nativeSrc": "2631:433:1",
													"nodeType": "YulBlock",
													"src": "2631:433:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2677:83:1",
																"nodeType": "YulBlock",
																"src": "2677:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2679:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2679:77:1"
																			},
																			"nativeSrc": "2679:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2679:79:1"
																		},
																		"nativeSrc": "2679:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2652:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2661:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2661:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2648:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:1"
																		},
																		"nativeSrc": "2648:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2648:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2644:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:1"
																},
																"nativeSrc": "2644:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2644:32:1"
															},
															"nativeSrc": "2641:119:1",
															"nodeType": "YulIf",
															"src": "2641:119:1"
														},
														{
															"nativeSrc": "2770:287:1",
															"nodeType": "YulBlock",
															"src": "2770:287:1",
															"statements": [
																{
																	"nativeSrc": "2785:45:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2785:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2816:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2816:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2827:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2827:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2812:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2812:3:1"
																				},
																				"nativeSrc": "2812:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2812:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2799:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "2799:12:1"
																		},
																		"nativeSrc": "2799:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2789:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2789:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2877:83:1",
																		"nodeType": "YulBlock",
																		"src": "2877:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2879:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "2879:77:1"
																					},
																					"nativeSrc": "2879:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2879:79:1"
																				},
																				"nativeSrc": "2879:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2879:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2849:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2849:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2857:18:1",
																				"nodeType": "YulLiteral",
																				"src": "2857:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2846:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2846:2:1"
																		},
																		"nativeSrc": "2846:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2846:30:1"
																	},
																	"nativeSrc": "2843:117:1",
																	"nodeType": "YulIf",
																	"src": "2843:117:1"
																},
																{
																	"nativeSrc": "2974:73:1",
																	"nodeType": "YulAssignment",
																	"src": "2974:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3019:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3019:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3030:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3030:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3015:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:1"
																				},
																				"nativeSrc": "3015:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3015:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3039:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3039:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "2984:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "2984:30:1"
																		},
																		"nativeSrc": "2984:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2984:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2974:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2974:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "2555:509:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2601:9:1",
														"nodeType": "YulTypedName",
														"src": "2601:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2612:7:1",
														"nodeType": "YulTypedName",
														"src": "2612:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2624:6:1",
														"nodeType": "YulTypedName",
														"src": "2624:6:1",
														"type": ""
													}
												],
												"src": "2555:509:1"
											},
											{
												"body": {
													"nativeSrc": "3115:32:1",
													"nodeType": "YulBlock",
													"src": "3115:32:1",
													"statements": [
														{
															"nativeSrc": "3125:16:1",
															"nodeType": "YulAssignment",
															"src": "3125:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "3136:5:1",
																"nodeType": "YulIdentifier",
																"src": "3136:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3125:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3125:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3070:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3097:5:1",
														"nodeType": "YulTypedName",
														"src": "3097:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3107:7:1",
														"nodeType": "YulTypedName",
														"src": "3107:7:1",
														"type": ""
													}
												],
												"src": "3070:77:1"
											},
											{
												"body": {
													"nativeSrc": "3218:53:1",
													"nodeType": "YulBlock",
													"src": "3218:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3235:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3235:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3258:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3258:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3240:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3240:17:1"
																		},
																		"nativeSrc": "3240:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3240:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3228:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3228:6:1"
																},
																"nativeSrc": "3228:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3228:37:1"
															},
															"nativeSrc": "3228:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3228:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3153:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3206:5:1",
														"nodeType": "YulTypedName",
														"src": "3206:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3213:3:1",
														"nodeType": "YulTypedName",
														"src": "3213:3:1",
														"type": ""
													}
												],
												"src": "3153:118:1"
											},
											{
												"body": {
													"nativeSrc": "3375:124:1",
													"nodeType": "YulBlock",
													"src": "3375:124:1",
													"statements": [
														{
															"nativeSrc": "3385:26:1",
															"nodeType": "YulAssignment",
															"src": "3385:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3397:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3397:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3408:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3408:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3393:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3393:3:1"
																},
																"nativeSrc": "3393:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3393:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3385:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3385:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3465:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3465:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3478:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3478:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3489:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3489:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3474:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3474:3:1"
																		},
																		"nativeSrc": "3474:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3474:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3421:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3421:43:1"
																},
																"nativeSrc": "3421:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3421:71:1"
															},
															"nativeSrc": "3421:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3421:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3277:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3347:9:1",
														"nodeType": "YulTypedName",
														"src": "3347:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3359:6:1",
														"nodeType": "YulTypedName",
														"src": "3359:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3370:4:1",
														"nodeType": "YulTypedName",
														"src": "3370:4:1",
														"type": ""
													}
												],
												"src": "3277:222:1"
											},
											{
												"body": {
													"nativeSrc": "3533:152:1",
													"nodeType": "YulBlock",
													"src": "3533:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3550:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3550:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3553:77:1",
																		"nodeType": "YulLiteral",
																		"src": "3553:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3543:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3543:6:1"
																},
																"nativeSrc": "3543:88:1",
																"nodeType": "YulFunctionCall",
																"src": "3543:88:1"
															},
															"nativeSrc": "3543:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "3543:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3647:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3647:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3650:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3650:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3640:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nativeSrc": "3640:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3640:15:1"
															},
															"nativeSrc": "3640:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3640:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3671:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3671:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3674:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3674:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3664:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3664:6:1"
																},
																"nativeSrc": "3664:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3664:15:1"
															},
															"nativeSrc": "3664:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3664:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "3505:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3505:180:1"
											},
											{
												"body": {
													"nativeSrc": "3719:152:1",
													"nodeType": "YulBlock",
													"src": "3719:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3736:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3736:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3739:77:1",
																		"nodeType": "YulLiteral",
																		"src": "3739:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:1"
																},
																"nativeSrc": "3729:88:1",
																"nodeType": "YulFunctionCall",
																"src": "3729:88:1"
															},
															"nativeSrc": "3729:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "3729:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3833:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3833:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3836:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3836:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3826:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:1"
																},
																"nativeSrc": "3826:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3826:15:1"
															},
															"nativeSrc": "3826:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3826:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3857:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3857:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3860:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3860:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3850:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:1"
																},
																"nativeSrc": "3850:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3850:15:1"
															},
															"nativeSrc": "3850:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3850:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3691:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3691:180:1"
											},
											{
												"body": {
													"nativeSrc": "3921:147:1",
													"nodeType": "YulBlock",
													"src": "3921:147:1",
													"statements": [
														{
															"nativeSrc": "3931:25:1",
															"nodeType": "YulAssignment",
															"src": "3931:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3954:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3954:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3936:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3936:17:1"
																},
																"nativeSrc": "3936:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3936:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3931:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3931:1:1"
																}
															]
														},
														{
															"nativeSrc": "3965:25:1",
															"nodeType": "YulAssignment",
															"src": "3965:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3988:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3988:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3970:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3970:17:1"
																},
																"nativeSrc": "3970:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3970:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3965:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3965:1:1"
																}
															]
														},
														{
															"nativeSrc": "3999:16:1",
															"nodeType": "YulAssignment",
															"src": "3999:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4010:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4010:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4013:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4013:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4006:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4006:3:1"
																},
																"nativeSrc": "4006:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4006:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3999:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3999:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4039:22:1",
																"nodeType": "YulBlock",
																"src": "4039:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4041:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4041:16:1"
																			},
																			"nativeSrc": "4041:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4041:18:1"
																		},
																		"nativeSrc": "4041:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4041:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4031:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4031:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4034:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4034:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4028:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4028:2:1"
																},
																"nativeSrc": "4028:10:1",
																"nodeType": "YulFunctionCall",
																"src": "4028:10:1"
															},
															"nativeSrc": "4025:36:1",
															"nodeType": "YulIf",
															"src": "4025:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3877:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3908:1:1",
														"nodeType": "YulTypedName",
														"src": "3908:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3911:1:1",
														"nodeType": "YulTypedName",
														"src": "3911:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3917:3:1",
														"nodeType": "YulTypedName",
														"src": "3917:3:1",
														"type": ""
													}
												],
												"src": "3877:191:1"
											},
											{
												"body": {
													"nativeSrc": "4119:149:1",
													"nodeType": "YulBlock",
													"src": "4119:149:1",
													"statements": [
														{
															"nativeSrc": "4129:25:1",
															"nodeType": "YulAssignment",
															"src": "4129:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4152:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4152:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4134:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4134:17:1"
																},
																"nativeSrc": "4134:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4134:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4129:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4129:1:1"
																}
															]
														},
														{
															"nativeSrc": "4163:25:1",
															"nodeType": "YulAssignment",
															"src": "4163:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4186:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4186:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4168:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4168:17:1"
																},
																"nativeSrc": "4168:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4168:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4163:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4163:1:1"
																}
															]
														},
														{
															"nativeSrc": "4197:17:1",
															"nodeType": "YulAssignment",
															"src": "4197:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4209:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4209:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4212:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4212:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4205:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4205:3:1"
																},
																"nativeSrc": "4205:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4205:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4197:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4197:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4239:22:1",
																"nodeType": "YulBlock",
																"src": "4239:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4241:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4241:16:1"
																			},
																			"nativeSrc": "4241:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4241:18:1"
																		},
																		"nativeSrc": "4241:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4241:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4230:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4230:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4236:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4236:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4227:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4227:2:1"
																},
																"nativeSrc": "4227:11:1",
																"nodeType": "YulFunctionCall",
																"src": "4227:11:1"
															},
															"nativeSrc": "4224:37:1",
															"nodeType": "YulIf",
															"src": "4224:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4074:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4105:1:1",
														"nodeType": "YulTypedName",
														"src": "4105:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4108:1:1",
														"nodeType": "YulTypedName",
														"src": "4108:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4114:4:1",
														"nodeType": "YulTypedName",
														"src": "4114:4:1",
														"type": ""
													}
												],
												"src": "4074:194:1"
											},
											{
												"body": {
													"nativeSrc": "4317:190:1",
													"nodeType": "YulBlock",
													"src": "4317:190:1",
													"statements": [
														{
															"nativeSrc": "4327:33:1",
															"nodeType": "YulAssignment",
															"src": "4327:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4354:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4354:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4336:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4336:17:1"
																},
																"nativeSrc": "4336:24:1",
																"nodeType": "YulFunctionCall",
																"src": "4336:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4450:22:1",
																"nodeType": "YulBlock",
																"src": "4450:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4452:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4452:16:1"
																			},
																			"nativeSrc": "4452:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4452:18:1"
																		},
																		"nativeSrc": "4452:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4452:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4375:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4375:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4382:66:1",
																		"nodeType": "YulLiteral",
																		"src": "4382:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4372:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4372:2:1"
																},
																"nativeSrc": "4372:77:1",
																"nodeType": "YulFunctionCall",
																"src": "4372:77:1"
															},
															"nativeSrc": "4369:103:1",
															"nodeType": "YulIf",
															"src": "4369:103:1"
														},
														{
															"nativeSrc": "4481:20:1",
															"nodeType": "YulAssignment",
															"src": "4481:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4492:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4492:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4499:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4499:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4488:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4488:3:1"
																},
																"nativeSrc": "4488:13:1",
																"nodeType": "YulFunctionCall",
																"src": "4488:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4481:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "4274:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4303:5:1",
														"nodeType": "YulTypedName",
														"src": "4303:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4313:3:1",
														"nodeType": "YulTypedName",
														"src": "4313:3:1",
														"type": ""
													}
												],
												"src": "4274:233:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063cb159dfe1461002d575b5f5ffd5b610047600480360381019061004291906104f5565b61005d565b6040516100549190610554565b60405180910390f35b5f5f8290505f5f90505f5f90505b8251811015610153575f61009b84838151811061008b5761008a61056d565b5b602001015160f81c60f81b61015e565b905083516001836100ac91906105c7565b1015610130575f6100e5856001856100c491906105c7565b815181106100d5576100d461056d565b5b602001015160f81c60f81b61015e565b90508082101561011b5781816100fb91906105fa565b8461010691906105c7565b935082806101139061062d565b93505061012a565b818461012791906105c7565b93505b5061013f565b808361013c91906105c7565b92505b50808061014b9061062d565b91505061006b565b508092505050919050565b5f7f4900000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036101b157600190506103a3565b7f5600000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361020357600590506103a3565b7f5800000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361025557600a90506103a3565b7f4c00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036102a757603290506103a3565b7f4300000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036102f957606490506103a3565b7f4400000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361034c576101f490506103a3565b7f4d00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361039f576103e890506103a3565b5f90505b919050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610407826103c1565b810181811067ffffffffffffffff82111715610426576104256103d1565b5b80604052505050565b5f6104386103a8565b905061044482826103fe565b919050565b5f67ffffffffffffffff821115610463576104626103d1565b5b61046c826103c1565b9050602081019050919050565b828183375f83830152505050565b5f61049961049484610449565b61042f565b9050828152602081018484840111156104b5576104b46103bd565b5b6104c0848285610479565b509392505050565b5f82601f8301126104dc576104db6103b9565b5b81356104ec848260208601610487565b91505092915050565b5f6020828403121561050a576105096103b1565b5b5f82013567ffffffffffffffff811115610527576105266103b5565b5b610533848285016104c8565b91505092915050565b5f819050919050565b61054e8161053c565b82525050565b5f6020820190506105675f830184610545565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6105d18261053c565b91506105dc8361053c565b92508282019050808211156105f4576105f361059a565b5b92915050565b5f6106048261053c565b915061060f8361053c565b92508282039050818111156106275761062661059a565b5b92915050565b5f6106378261053c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106695761066861059a565b5b60018201905091905056fea26469706673582212208188a89a9f02234b251eee3e3cb5184adac8448a9d3acd79d224051444e430e264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB159DFE EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 DUP3 SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x153 JUMPI PUSH0 PUSH2 0x9B DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8B JUMPI PUSH2 0x8A PUSH2 0x56D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x15E JUMP JUMPDEST SWAP1 POP DUP4 MLOAD PUSH1 0x1 DUP4 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST LT ISZERO PUSH2 0x130 JUMPI PUSH0 PUSH2 0xE5 DUP6 PUSH1 0x1 DUP6 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xD5 JUMPI PUSH2 0xD4 PUSH2 0x56D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x15E JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x11B JUMPI DUP2 DUP2 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x5FA JUMP JUMPDEST DUP5 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST SWAP4 POP DUP3 DUP1 PUSH2 0x113 SWAP1 PUSH2 0x62D JUMP JUMPDEST SWAP4 POP POP PUSH2 0x12A JUMP JUMPDEST DUP2 DUP5 PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x13F JUMP JUMPDEST DUP1 DUP4 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 POP JUMPDEST POP DUP1 DUP1 PUSH2 0x14B SWAP1 PUSH2 0x62D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6B JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x4900000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x1B1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0x5600000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x203 JUMPI PUSH1 0x5 SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x255 JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0x4C00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x2A7 JUMPI PUSH1 0x32 SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x2F9 JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x34C JUMPI PUSH2 0x1F4 SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0x4D00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x39F JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x3A3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x407 DUP3 PUSH2 0x3C1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x426 JUMPI PUSH2 0x425 PUSH2 0x3D1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x438 PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP PUSH2 0x444 DUP3 DUP3 PUSH2 0x3FE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x463 JUMPI PUSH2 0x462 PUSH2 0x3D1 JUMP JUMPDEST JUMPDEST PUSH2 0x46C DUP3 PUSH2 0x3C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x499 PUSH2 0x494 DUP5 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4B5 JUMPI PUSH2 0x4B4 PUSH2 0x3BD JUMP JUMPDEST JUMPDEST PUSH2 0x4C0 DUP5 DUP3 DUP6 PUSH2 0x479 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4DC JUMPI PUSH2 0x4DB PUSH2 0x3B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4EC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x487 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x50A JUMPI PUSH2 0x509 PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x527 JUMPI PUSH2 0x526 PUSH2 0x3B5 JUMP JUMPDEST JUMPDEST PUSH2 0x533 DUP5 DUP3 DUP6 ADD PUSH2 0x4C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54E DUP2 PUSH2 0x53C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x567 PUSH0 DUP4 ADD DUP5 PUSH2 0x545 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x5D1 DUP3 PUSH2 0x53C JUMP JUMPDEST SWAP2 POP PUSH2 0x5DC DUP4 PUSH2 0x53C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x5F4 JUMPI PUSH2 0x5F3 PUSH2 0x59A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x604 DUP3 PUSH2 0x53C JUMP JUMPDEST SWAP2 POP PUSH2 0x60F DUP4 PUSH2 0x53C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x627 JUMPI PUSH2 0x626 PUSH2 0x59A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x637 DUP3 PUSH2 0x53C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x669 JUMPI PUSH2 0x668 PUSH2 0x59A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 DUP9 0xA8 SWAP11 SWAP16 MUL 0x23 0x4B 0x25 0x1E RETURNCONTRACT 0x3E EXTCODECOPY 0xB5 XOR BLOBBASEFEE 0xDA 0xC8 PREVRANDAO DUP11 SWAP14 GASPRICE 0xCD PUSH26 0xD224051444E430E264736F6C634300081E003300000000000000 ",
							"sourceMap": "793:2385:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:1484;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1076:7;1188:23;1220:5;1188:38;;1276:14;1293:1;1276:18;;1367:9;1379:1;1367:13;;1362:1064;1386:10;:17;1382:1;:21;1362:1064;;;1475:20;1498:26;1510:10;1521:1;1510:13;;;;;;;;:::i;:::-;;;;;;;;;;1498:11;:26::i;:::-;1475:49;;1637:10;:17;1633:1;1629;:5;;;;:::i;:::-;:25;1625:790;;;1675:17;1695:30;1707:10;1722:1;1718;:5;;;;:::i;:::-;1707:17;;;;;;;;:::i;:::-;;;;;;;;;;1695:11;:30::i;:::-;1675:50;;1901:9;1886:12;:24;1882:377;;;1957:12;1945:9;:24;;;;:::i;:::-;1935:34;;;;;:::i;:::-;;;2086:3;;;;;:::i;:::-;;;;1882:377;;;2227:12;2217:22;;;;;:::i;:::-;;;1882:377;1656:618;1625:790;;;2387:12;2377:22;;;;;:::i;:::-;;;1625:790;1410:1016;1405:3;;;;;:::i;:::-;;;;1362:1064;;;;2482:6;2475:13;;;;1012:1484;;;:::o;2694:481::-;2751:7;2836:11;:4;:11;;;;2832:25;;2856:1;2849:8;;;;2832:25;2872:11;:4;:11;;;;2868:25;;2892:1;2885:8;;;;2868:25;2908:11;:4;:11;;;;2904:26;;2928:2;2921:9;;;;2904:26;2945:11;:4;:11;;;;2941:26;;2965:2;2958:9;;;;2941:26;2982:11;:4;:11;;;;2978:27;;3002:3;2995:10;;;;2978:27;3020:11;:4;:11;;;;3016:27;;3040:3;3033:10;;;;3016:27;3058:11;:4;:11;;;;3054:28;;3078:4;3071:11;;;;3054:28;3166:1;3159:8;;2694:481;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:148::-;1708:6;1703:3;1698;1685:30;1749:1;1740:6;1735:3;1731:16;1724:27;1610:148;;;:::o;1764:425::-;1842:5;1867:66;1883:49;1925:6;1883:49;:::i;:::-;1867:66;:::i;:::-;1858:75;;1956:6;1949:5;1942:21;1994:4;1987:5;1983:16;2032:3;2023:6;2018:3;2014:16;2011:25;2008:112;;;2039:79;;:::i;:::-;2008:112;2129:54;2176:6;2171:3;2166;2129:54;:::i;:::-;1848:341;1764:425;;;;;:::o;2209:340::-;2265:5;2314:3;2307:4;2299:6;2295:17;2291:27;2281:122;;2322:79;;:::i;:::-;2281:122;2439:6;2426:20;2464:79;2539:3;2531:6;2524:4;2516:6;2512:17;2464:79;:::i;:::-;2455:88;;2271:278;2209:340;;;;:::o;2555:509::-;2624:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:119;;;2679:79;;:::i;:::-;2641:119;2827:1;2816:9;2812:17;2799:31;2857:18;2849:6;2846:30;2843:117;;;2879:79;;:::i;:::-;2843:117;2984:63;3039:7;3030:6;3019:9;3015:22;2984:63;:::i;:::-;2974:73;;2770:287;2555:509;;;;:::o;3070:77::-;3107:7;3136:5;3125:16;;3070:77;;;:::o;3153:118::-;3240:24;3258:5;3240:24;:::i;:::-;3235:3;3228:37;3153:118;;:::o;3277:222::-;3370:4;3408:2;3397:9;3393:18;3385:26;;3421:71;3489:1;3478:9;3474:17;3465:6;3421:71;:::i;:::-;3277:222;;;;:::o;3505:180::-;3553:77;3550:1;3543:88;3650:4;3647:1;3640:15;3674:4;3671:1;3664:15;3691:180;3739:77;3736:1;3729:88;3836:4;3833:1;3826:15;3860:4;3857:1;3850:15;3877:191;3917:3;3936:20;3954:1;3936:20;:::i;:::-;3931:25;;3970:20;3988:1;3970:20;:::i;:::-;3965:25;;4013:1;4010;4006:9;3999:16;;4034:3;4031:1;4028:10;4025:36;;;4041:18;;:::i;:::-;4025:36;3877:191;;;;:::o;4074:194::-;4114:4;4134:20;4152:1;4134:20;:::i;:::-;4129:25;;4168:20;4186:1;4168:20;:::i;:::-;4163:25;;4212:1;4209;4205:9;4197:17;;4236:1;4230:4;4227:11;4224:37;;;4241:18;;:::i;:::-;4224:37;4074:194;;;;:::o;4274:233::-;4313:3;4336:24;4354:5;4336:24;:::i;:::-;4327:33;;4382:66;4375:5;4372:77;4369:103;;4452:18;;:::i;:::-;4369:103;4499:1;4492:5;4488:13;4481:20;;4274:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "341200",
								"executionCost": "378",
								"totalCost": "341578"
							},
							"external": {
								"romanToInt(string)": "infinite"
							},
							"internal": {
								"charToValue(bytes1)": "262"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 793,
									"end": 3178,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 3178,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208188a89a9f02234b251eee3e3cb5184adac8448a9d3acd79d224051444e430e264736f6c634300081e0033",
									".code": [
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "CB159DFE"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 3178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1012,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1012,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1012,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 2426,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1362,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1403,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 2426,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1362,
											"end": 2426,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1510,
											"end": 1520,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1510,
											"end": 1523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1510,
											"end": 1523,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1498,
											"end": 1524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1498,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1647,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1634,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1629,
											"end": 1630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1629,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1629,
											"end": 1634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1629,
											"end": 1634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1629,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1629,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1629,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 2415,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1625,
											"end": 2415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1707,
											"end": 1717,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1718,
											"end": 1719,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1707,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1695,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1910,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 2259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1882,
											"end": 2259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1945,
											"end": 1969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1945,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1945,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1935,
											"end": 1969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1935,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1935,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1969,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2086,
											"end": 2089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2086,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2089,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2086,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2089,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1882,
											"end": 2259,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 2259,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1882,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2239,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2217,
											"end": 2239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2217,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2239,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2217,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2239,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 2259,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1882,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 2274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1625,
											"end": 2415,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 2415,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1625,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2377,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 2415,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1625,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 2426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1405,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1362,
											"end": 2426,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 2426,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1362,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 2426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 2496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3175,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2694,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "4900000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2836,
											"end": 2840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2836,
											"end": 2847,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2832,
											"end": 2857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2856,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2849,
											"end": 2857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2857,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2857,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2832,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "PUSH",
											"source": 0,
											"value": "5600000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2872,
											"end": 2876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2872,
											"end": 2883,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2892,
											"end": 2893,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2885,
											"end": 2893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2885,
											"end": 2893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2885,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2885,
											"end": 2893,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2908,
											"end": 2919,
											"name": "PUSH",
											"source": 0,
											"value": "5800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2908,
											"end": 2912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2908,
											"end": 2919,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2908,
											"end": 2919,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2908,
											"end": 2919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2908,
											"end": 2919,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 2930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2930,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2921,
											"end": 2930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 2930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2921,
											"end": 2930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2930,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2956,
											"name": "PUSH",
											"source": 0,
											"value": "4C00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2945,
											"end": 2949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2945,
											"end": 2956,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2956,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2958,
											"end": 2967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2958,
											"end": 2967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2958,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2958,
											"end": 2967,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 2993,
											"name": "PUSH",
											"source": 0,
											"value": "4300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2982,
											"end": 2986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 2993,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 2993,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 2993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 2993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2978,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2978,
											"end": 3005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3005,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2995,
											"end": 3005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2995,
											"end": 3005,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2978,
											"end": 3005,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2978,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "PUSH",
											"source": 0,
											"value": "4400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3020,
											"end": 3024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3016,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3016,
											"end": 3043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "PUSH",
											"source": 0,
											"value": "1F4"
										},
										{
											"begin": 3033,
											"end": 3043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3033,
											"end": 3043,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3016,
											"end": 3043,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3016,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "4D00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3058,
											"end": 3062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3069,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3069,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3054,
											"end": 3082,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3078,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3082,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3054,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3175,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2694,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1098,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1251,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1470,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1508,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1701,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1738,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1883,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1867,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 1992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2021,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2036,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2039,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2129,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2311,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2318,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2322,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2446,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2539,
											"end": 2542,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2464,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2671,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2676,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2679,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2830,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2876,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2879,
											"end": 2958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2984,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 3047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 3047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 3057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3258,
											"end": 3263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3240,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3264,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3240,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3397,
											"end": 3406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3489,
											"end": 3490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3421,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3492,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3421,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3685,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3505,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3647,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3640,
											"end": 3655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3678,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3671,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3679,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3871,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3691,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3739,
											"end": 3816,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3736,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3840,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3833,
											"end": 3834,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3826,
											"end": 3841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3864,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4068,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3936,
											"end": 3956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3956,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3936,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3956,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3988,
											"end": 3989,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3970,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3990,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3970,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 3990,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 3990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4014,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4038,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4061,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4025,
											"end": 4061,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4041,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4041,
											"end": 4059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4059,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4041,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4061,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4025,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4268,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4074,
											"end": 4268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4152,
											"end": 4153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4134,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4154,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4134,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4186,
											"end": 4187,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4168,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4188,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4168,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4188,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4205,
											"end": 4214,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4238,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4224,
											"end": 4261,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4224,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4224,
											"end": 4261,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4241,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4224,
											"end": 4261,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4224,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4268,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4274,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4354,
											"end": 4359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4336,
											"end": 4360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4360,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4336,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4448,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4375,
											"end": 4380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4449,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4369,
											"end": 4472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4452,
											"end": 4470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4472,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4369,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4500,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/RomanToInteger.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"romanToInt(string)": "cb159dfe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"roman\",\"type\":\"string\"}],\"name\":\"romanToInt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"\\u5b9e\\u73b0\\u5c06\\u7f57\\u9a6c\\u6570\\u5b57\\u8f6c\\u6362\\u4e3a\\u6574\\u6570\\u7684\\u529f\\u80fd\\u3002 \\u7f57\\u9a6c\\u6570\\u5b57\\u5305\\u542b\\u4ee5\\u4e0b\\u4e03\\u79cd\\u5b57\\u7b26: I\\uff0c V\\uff0c X\\uff0c L\\uff0cC\\uff0cD \\u548c M\\uff0c\\u5bf9\\u5e94\\u6570\\u503c\\u5206\\u522b\\u4e3a 1, 5, 10, 50, 100, 500, 1000\\u3002 \\u901a\\u5e38\\u5c0f\\u6570\\u5b57\\u5728\\u5927\\u6570\\u5b57\\u53f3\\u8fb9\\uff0c\\u4f46\\u5b58\\u5728\\u516d\\u79cd\\u7279\\u4f8b\\uff1a 1. I \\u53ef\\u4ee5\\u653e\\u5728 V (5) \\u548c X (10) \\u7684\\u5de6\\u8fb9\\uff0c\\u6765\\u8868\\u793a 4 \\u548c 9\\u3002 2. X \\u53ef\\u4ee5\\u653e\\u5728 L (50) \\u548c C (100) \\u7684\\u5de6\\u8fb9\\uff0c\\u6765\\u8868\\u793a 40 \\u548c 90\\u3002 3. C \\u53ef\\u4ee5\\u653e\\u5728 D (500) \\u548c M (1000) \\u7684\\u5de6\\u8fb9\\uff0c\\u6765\\u8868\\u793a 400 \\u548c 900\\u3002\",\"kind\":\"dev\",\"methods\":{\"romanToInt(string)\":{\"details\":\"\\u5c06\\u8f93\\u5165\\u7684\\u7f57\\u9a6c\\u6570\\u5b57\\u5b57\\u7b26\\u4e32\\u8f6c\\u6362\\u4e3a\\u5bf9\\u5e94\\u7684\\u6574\\u6570\\u3002\",\"params\":{\"roman\":\"\\u8981\\u8f6c\\u6362\\u7684\\u7f57\\u9a6c\\u6570\\u5b57\\u5b57\\u7b26\\u4e32\\u3002\"},\"returns\":{\"_0\":\"\\u8f6c\\u6362\\u540e\\u7684\\u6574\\u6570\\u3002\"}}},\"title\":\"RomanToInteger\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RomanToInteger.sol\":\"RomanToInteger\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RomanToInteger.sol\":{\"keccak256\":\"0xe259646148934bd0e1d691bebd1b00f91259065c9bfc22c8890fb6445f65e13c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://85bc98b75bbc44aff21b51d0224b08df16091bdcb760b508fb76d56ea338acea\",\"dweb:/ipfs/QmVuv7tQ4STpXMYUHRZauNWABCmr6PM37nX1GE4k44iDr9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/RomanToInteger.sol": {
				"ast": {
					"absolutePath": "contracts/RomanToInteger.sol",
					"exportedSymbols": {
						"RomanToInteger": [
							141
						]
					},
					"id": 142,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "133:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RomanToInteger",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "277:514:0",
								"text": " @title RomanToInteger\n @dev 实现将罗马数字转换为整数的功能。\n 罗马数字包含以下七种字符: I， V， X， L，C，D 和 M，对应数值分别为 1, 5, 10, 50, 100, 500, 1000。\n 通常小数字在大数字右边，但存在六种特例：\n 1. I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。\n 2. X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。\n 3. C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。"
							},
							"fullyImplemented": true,
							"id": 141,
							"linearizedBaseContracts": [
								141
							],
							"name": "RomanToInteger",
							"nameLocation": "802:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "1085:1411:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "romanBytes",
														"nameLocation": "1201:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "1188:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 10,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1188:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"arguments": [
														{
															"id": 14,
															"name": "roman",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1220:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1214:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 12,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1214:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1214:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1188:38:0"
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1284:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "1276:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1276:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 20,
												"initialValue": {
													"hexValue": "30",
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1293:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1276:18:0"
											},
											{
												"body": {
													"id": 82,
													"nodeType": "Block",
													"src": "1410:1016:0",
													"statements": [
														{
															"assignments": [
																33
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 33,
																	"mutability": "mutable",
																	"name": "currentValue",
																	"nameLocation": "1483:12:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 82,
																	"src": "1475:20:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 32,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1475:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 39,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 35,
																			"name": "romanBytes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "1510:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 37,
																		"indexExpression": {
																			"id": 36,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "1521:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1510:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	],
																	"id": 34,
																	"name": "charToValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1498:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes1_$returns$_t_uint256_$",
																		"typeString": "function (bytes1) pure returns (uint256)"
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1498:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1475:49:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 40,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1629:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 41,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1633:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1629:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 43,
																		"name": "romanBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "1637:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1648:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1637:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1629:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 80,
																"nodeType": "Block",
																"src": "2280:135:0",
																"statements": [
																	{
																		"expression": {
																			"id": 78,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 76,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 18,
																				"src": "2377:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 77,
																				"name": "currentValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 33,
																				"src": "2387:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2377:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 79,
																		"nodeType": "ExpressionStatement",
																		"src": "2377:22:0"
																	}
																]
															},
															"id": 81,
															"nodeType": "IfStatement",
															"src": "1625:790:0",
															"trueBody": {
																"id": 75,
																"nodeType": "Block",
																"src": "1656:618:0",
																"statements": [
																	{
																		"assignments": [
																			47
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 47,
																				"mutability": "mutable",
																				"name": "nextValue",
																				"nameLocation": "1683:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 75,
																				"src": "1675:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 46,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1675:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 55,
																		"initialValue": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 49,
																						"name": "romanBytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1707:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 53,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 52,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 50,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 22,
																							"src": "1718:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 51,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1722:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "1718:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1707:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 48,
																				"name": "charToValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "1695:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes1_$returns$_t_uint256_$",
																					"typeString": "function (bytes1) pure returns (uint256)"
																				}
																			},
																			"id": 54,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1695:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1675:50:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 58,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 56,
																				"name": "currentValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 33,
																				"src": "1886:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 57,
																				"name": "nextValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 47,
																				"src": "1901:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1886:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 73,
																			"nodeType": "Block",
																			"src": "2115:144:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 71,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 69,
																							"name": "result",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 18,
																							"src": "2217:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 70,
																							"name": "currentValue",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 33,
																							"src": "2227:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2217:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 72,
																					"nodeType": "ExpressionStatement",
																					"src": "2217:22:0"
																				}
																			]
																		},
																		"id": 74,
																		"nodeType": "IfStatement",
																		"src": "1882:377:0",
																		"trueBody": {
																			"id": 68,
																			"nodeType": "Block",
																			"src": "1912:197:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 63,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 59,
																							"name": "result",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 18,
																							"src": "1935:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 62,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 60,
																								"name": "nextValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 47,
																								"src": "1945:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 61,
																								"name": "currentValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 33,
																								"src": "1957:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1945:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1935:34:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 64,
																					"nodeType": "ExpressionStatement",
																					"src": "1935:34:0"
																				},
																				{
																					"expression": {
																						"id": 66,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "2086:3:0",
																						"subExpression": {
																							"id": 65,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 22,
																							"src": "2086:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 67,
																					"nodeType": "ExpressionStatement",
																					"src": "2086:3:0"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 25,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1382:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 26,
															"name": "romanBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1386:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1397:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1386:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1382:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 83,
												"initializationExpression": {
													"assignments": [
														22
													],
													"declarations": [
														{
															"constant": false,
															"id": 22,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1375:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 83,
															"src": "1367:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 21,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1367:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 24,
													"initialValue": {
														"hexValue": "30",
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1379:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1367:13:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1405:3:0",
														"subExpression": {
															"id": 29,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1405:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 31,
													"nodeType": "ExpressionStatement",
													"src": "1405:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1362:1064:0"
											},
											{
												"expression": {
													"id": 84,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "2482:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 85,
												"nodeType": "Return",
												"src": "2475:13:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "824:182:0",
										"text": " @dev 将输入的罗马数字字符串转换为对应的整数。\n @param roman 要转换的罗马数字字符串。\n @return 转换后的整数。"
									},
									"functionSelector": "cb159dfe",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "romanToInt",
									"nameLocation": "1021:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "roman",
												"nameLocation": "1046:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1032:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1032:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:21:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1076:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1075:9:0"
									},
									"scope": 141,
									"src": "1012:1484:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "2760:415:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 95,
														"name": "char",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2836:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "49",
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2844:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
															"typeString": "literal_string \"I\""
														},
														"value": "I"
													},
													"src": "2836:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 100,
												"nodeType": "IfStatement",
												"src": "2832:25:0",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2856:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 94,
													"id": 99,
													"nodeType": "Return",
													"src": "2849:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 101,
														"name": "char",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2872:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "56",
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2880:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_f0da850a6b7c61a66cdd43ac7529affc6000442af1c1bdda1db3bb7220bf7613",
															"typeString": "literal_string \"V\""
														},
														"value": "V"
													},
													"src": "2872:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 106,
												"nodeType": "IfStatement",
												"src": "2868:25:0",
												"trueBody": {
													"expression": {
														"hexValue": "35",
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2892:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"functionReturnParameters": 94,
													"id": 105,
													"nodeType": "Return",
													"src": "2885:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 107,
														"name": "char",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2908:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "58",
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2916:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d56",
															"typeString": "literal_string \"X\""
														},
														"value": "X"
													},
													"src": "2908:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "2904:26:0",
												"trueBody": {
													"expression": {
														"hexValue": "3130",
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2928:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"functionReturnParameters": 94,
													"id": 111,
													"nodeType": "Return",
													"src": "2921:9:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "char",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2945:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "4c",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2953:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_8aa64f937099b65a4febc243a5ae0f2d6416bb9e473c30dd29c1ee498fb7c5a8",
															"typeString": "literal_string \"L\""
														},
														"value": "L"
													},
													"src": "2945:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 118,
												"nodeType": "IfStatement",
												"src": "2941:26:0",
												"trueBody": {
													"expression": {
														"hexValue": "3530",
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2965:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"functionReturnParameters": 94,
													"id": 117,
													"nodeType": "Return",
													"src": "2958:9:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 119,
														"name": "char",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2982:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "43",
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2990:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_017e667f4b8c174291d1543c466717566e206df1bfd6f30271055ddafdb18f72",
															"typeString": "literal_string \"C\""
														},
														"value": "C"
													},
													"src": "2982:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 124,
												"nodeType": "IfStatement",
												"src": "2978:27:0",
												"trueBody": {
													"expression": {
														"hexValue": "313030",
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3002:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"functionReturnParameters": 94,
													"id": 123,
													"nodeType": "Return",
													"src": "2995:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 125,
														"name": "char",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "3020:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "44",
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3028:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_6c3fd336b49dcb1c57dd4fbeaf5f898320b0da06a5ef64e798c6497600bb79f2",
															"typeString": "literal_string \"D\""
														},
														"value": "D"
													},
													"src": "3020:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 130,
												"nodeType": "IfStatement",
												"src": "3016:27:0",
												"trueBody": {
													"expression": {
														"hexValue": "353030",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3040:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														},
														"value": "500"
													},
													"functionReturnParameters": 94,
													"id": 129,
													"nodeType": "Return",
													"src": "3033:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 131,
														"name": "char",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "3058:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "4d",
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3066:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7d61fdc86cb928ea48fbf22d28ed5341c2e6a2599c550270b824b71dfa078d06",
															"typeString": "literal_string \"M\""
														},
														"value": "M"
													},
													"src": "3058:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 136,
												"nodeType": "IfStatement",
												"src": "3054:28:0",
												"trueBody": {
													"expression": {
														"hexValue": "31303030",
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3078:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"functionReturnParameters": 94,
													"id": 135,
													"nodeType": "Return",
													"src": "3071:11:0"
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3166:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 94,
												"id": 138,
												"nodeType": "Return",
												"src": "3159:8:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2504:184:0",
										"text": " @dev 将单个罗马字符转换为对应的整数数值。\n @param char 要转换的单个罗马字符。\n @return 该字符对应的整数数值。"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "charToValue",
									"nameLocation": "2703:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "char",
												"nameLocation": "2722:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2715:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 89,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "2715:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:13:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2750:9:0"
									},
									"scope": 141,
									"src": "2694:481:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 142,
							"src": "793:2385:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "133:3047:0"
				},
				"id": 0
			}
		}
	}
}